// Code generated by MockGen. DO NOT EDIT.
// Source: usecase/history_output_boundary.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	reflect "reflect"

	entity "github.com/HottoCoffee/HottoCoffee/core/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockHistoryOutputBoundary is a mock of HistoryOutputBoundary interface.
type MockHistoryOutputBoundary struct {
	ctrl     *gomock.Controller
	recorder *MockHistoryOutputBoundaryMockRecorder
}

// MockHistoryOutputBoundaryMockRecorder is the mock recorder for MockHistoryOutputBoundary.
type MockHistoryOutputBoundaryMockRecorder struct {
	mock *MockHistoryOutputBoundary
}

// NewMockHistoryOutputBoundary creates a new mock instance.
func NewMockHistoryOutputBoundary(ctrl *gomock.Controller) *MockHistoryOutputBoundary {
	mock := &MockHistoryOutputBoundary{ctrl: ctrl}
	mock.recorder = &MockHistoryOutputBoundaryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHistoryOutputBoundary) EXPECT() *MockHistoryOutputBoundaryMockRecorder {
	return m.recorder
}

// SendHistoryListResponse mocks base method.
func (m *MockHistoryOutputBoundary) SendHistoryListResponse(histories entity.BatchExecutionHistories) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendHistoryListResponse", histories)
}

// SendHistoryListResponse indicates an expected call of SendHistoryListResponse.
func (mr *MockHistoryOutputBoundaryMockRecorder) SendHistoryListResponse(histories interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHistoryListResponse", reflect.TypeOf((*MockHistoryOutputBoundary)(nil).SendHistoryListResponse), histories)
}

// SendHistoryResponse mocks base method.
func (m *MockHistoryOutputBoundary) SendHistoryResponse(history entity.BatchExecutionHistory) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendHistoryResponse", history)
}

// SendHistoryResponse indicates an expected call of SendHistoryResponse.
func (mr *MockHistoryOutputBoundaryMockRecorder) SendHistoryResponse(history interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendHistoryResponse", reflect.TypeOf((*MockHistoryOutputBoundary)(nil).SendHistoryResponse), history)
}

// SendInternalServerErrorResponse mocks base method.
func (m *MockHistoryOutputBoundary) SendInternalServerErrorResponse() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendInternalServerErrorResponse")
}

// SendInternalServerErrorResponse indicates an expected call of SendInternalServerErrorResponse.
func (mr *MockHistoryOutputBoundaryMockRecorder) SendInternalServerErrorResponse() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendInternalServerErrorResponse", reflect.TypeOf((*MockHistoryOutputBoundary)(nil).SendInternalServerErrorResponse))
}

// SendNotFoundResponse mocks base method.
func (m *MockHistoryOutputBoundary) SendNotFoundResponse() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SendNotFoundResponse")
}

// SendNotFoundResponse indicates an expected call of SendNotFoundResponse.
func (mr *MockHistoryOutputBoundaryMockRecorder) SendNotFoundResponse() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendNotFoundResponse", reflect.TypeOf((*MockHistoryOutputBoundary)(nil).SendNotFoundResponse))
}
