name: Deploy backend to AWS

on:
  workflow_run:
    workflows:
      - build-backend
    types:
      - completed

defaults:
  run:
    working-directory: ./backend/go

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v3
      - name: Make fail if the previous workflow was failed
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: |
          echo '::error::Previous workflow was failed'
          exit 1
      - uses: actions/setup-go@v3
        with:
          go-version-file: ./backend/go/go.mod
          cache-dependency-path: ./backend/go/go.sum
      - name: Build
        run: go build

      - name: Public IP Install
        id: ip
        uses: haythem/public-ip@v1.2

      - name: AWS CLI install
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
          aws --version
      - name: AWS set Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Deploy
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

          # copy the new binary
          echo "${{ secrets.DEPLOY_KEY }}" > deploy_key
          chmod 600 deploy_key
          scp -i deploy_key -o StrictHostKeyChecking=no ./HottoCoffee ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_DIR }}

          # kill the previous process and run the new one
          ssh -i deploy_key -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_DIR }} "ps aux | grep -v grep | grep HottoCoffee | awk '{print $2}' | xargs kill && nohup ./HottoCoffee > log &"

      - name: Revoke security group
        if: always()
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
